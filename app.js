const puppeteer=require("puppeteer");const cheerio=require("cheerio");const constants=require("./constants");async function _constructor(){const browser=await puppeteer.launch(constants.BROWSER_OPTIONS);const pages=await browser.pages();const page=pages[0];await page.setRequestInterception(true);page.on("request",(request=>{if(request.resourceType()==="image")request.abort();else request.continue()}));page.on("dialog",(async dialog=>{await dialog.accept()}));return{page:page,browser:browser}}async function _openInbox(page,_mail){const cookies=constants.COOKIE(_mail);await page.setCookie(cookies);await page.goto(constants.URL);await page.waitForSelector(constants.S_LOGIN);await page.focus(constants.S_LOGIN);await page.keyboard.press("Enter");await page.waitForSelector(constants.S_HOME);await page.waitForTimeout(300);return page}function getMail(){return(async()=>{try{const{page:page,browser:browser}=await _constructor();await page.goto(constants.URL_GENERATOR);const mail=await page.$eval(constants.S_GENERATOR,($el=>$el.innerText));await page.close();await browser.close();return mail}catch(e){throw new Error(e)}})()}function getRSS(_mail){return(async()=>{let{page:page,browser:browser}=await _constructor();page=await _openInbox(page,_mail);await page.evaluate((()=>genrss()));await page.waitForTimeout(3e3);const rss=await page.$eval(constants.S_GENERATOR,($el=>$el.innerText));await page.close();await browser.close();return rss})()}function getInbox(_mail,_search={},_options={}){let arKeySearch=Object.keys(_search);if(!_mail)throw new Error(constants.ERROR_MAIL_INVALID);if(arKeySearch.length>2)throw new Error("Error en la cantidad de parametros");if(arKeySearch.length>1){arKeySearch.forEach((search=>{let res=["content","subject"].includes(search);if(!res)throw new Error(`El parametro [${search}] es invalido`);console.log(res)}))}let MAX_PAGE=_options.MAX_PAGE||5;if(MAX_PAGE>20)throw new Error("MAX_PAGE must be less than 20. This number directly affects memory consumption, handle it with care.");let mailPerPage=15;let arPageInbox=[];let pageInbox=undefined;let i=0;return(async(_mail,_search,_options)=>{try{let{page:page,browser:browser}=await _constructor();page=await _openInbox(page,_mail);const totalMails=Number(String(await page.$eval(constants.S_N_MAIL,($el=>$el.innerText))).split(" ")[0]);if(totalMails<=75){let pages=(totalMails/mailPerPage).toFixed(0);MAX_PAGE=pages>0?pages:1}await page.waitForTimeout(1e3);while(i<MAX_PAGE){const frameBox=page.frames().find((frame=>frame.name(constants.S_IFRAME_BOX)));pageInbox=await frameBox.$$eval(constants.S_INBOX_LIST,((elements,_search,constants)=>{let result=[];let{subject:subject,content:content,date:date,index:index}=_search;elements.map((el=>{let save=false;let object={};let _id=el.getAttribute("id");let _time=el.querySelector(constants.S_TIME).innerText;let _subject=el.querySelector(constants.S_SUBJECT).innerText;let _content=el.querySelector(constants.S_CONTENT).innerText;if(subject&&subject===_subject){save=true}if(content&&content===_content){save=true}if(!subject&&!content){save=true}if(save){object["id"]=_id;object["time"]=_time;object["subject"]=_subject;object["content"]=_content;result.push(object)}}));return result}),_search,constants);if(i<MAX_PAGE-1){await page.click(constants.S_BTN_NEXT);await page.waitForTimeout(3e3)}if(pageInbox.length>0){arPageInbox.push(pageInbox)}i++}const inbox={totalEmail:totalMails,maxPage:MAX_PAGE,pages:arPageInbox};await page.waitForTimeout(1e3);await browser.close();return inbox}catch(e){throw new Error(e)}})(_mail,_search,_options)}function emptyInbox(_mail){return(async()=>{let{page:page,browser:browser}=await _constructor();page=await _openInbox(page,_mail);await page.evaluate((()=>suppr_all()));await page.waitForTimeout(3e3);const totalMails=Number(String(await page.$eval(constants.S_N_MAIL,($el=>$el.innerText))).split(" ")[0]);await browser.close();let deleted=totalMails<=0;return{deleted:deleted,totalMails:totalMails}})()}function readMessage(_mail,_id,_getType="html",_selector=""){try{return(async(mail,id,getType,selector)=>{let{page:page,browser:browser}=await _constructor();page=await _openInbox(page,_mail);await page.waitForTimeout(1e3);await page.goto(`${constants.URL}mail?b=${mail}&id=m${id}`);let content=await page.evaluate((()=>document.querySelector("#mail").outerHTML));await browser.close();if(selector){const $=cheerio.load(content);content=$(selector).contents().map((function(){return this.type==="text"?$(this).text().trim():""})).get().filter(Boolean)}return content})(_mail,_id,_getType,_selector)}catch(e){console.log(e)}}function sendMessage(_mail,_to,_subject,_body){try{return(async(mail,_to,_subject,_body)=>{let{page:page,browser:browser}=await _constructor();page=await _openInbox(page,mail);await page.evaluate((()=>newm()));await page.waitForTimeout(1e3);const elementHandle=await page.$("#ifmail");const frame=await elementHandle.contentFrame();await frame.type(constants.S_INPUT_TO,_to);await frame.type(constants.S_INPUT_SUBJECT,_subject);await frame.type(constants.S_INPUT_BODY,_body);await frame.click(constants.S_BNT_SEND);await page.close();await browser.close();return true})(_mail,_to,_subject,_body)}catch(e){console.log(e)}}function deleteMessage(_mail,_id){try{return(async(mail,id)=>{let{page:page,browser:browser}=await _constructor();page=await _openInbox(page,mail);await page.evaluate((()=>w.suppr_mail()));await page.close();await browser.close();return true})(_mail,_id)}catch(e){console.log(e)}}module.exports={getMail:getMail,getRSS:getRSS,getInbox:getInbox,emptyInbox:emptyInbox,readMessage:readMessage,sendMessage:sendMessage,deleteMessage:deleteMessage};